{"version":3,"sources":["components/Contacts/ContactList/contactList.module.scss","components/ContactProperties/contactProperties.module.scss","components/Contacts/contacts.module.scss","components/Contacts/Filter/filter.module.scss","components/Contacts/Filter/search.svg","components/Contacts/ContactList/detail.svg","components/Contacts/AddContactForm/addContactForm.module.scss","redux/contact/actions.js","redux/contact/types.js","components/Contacts/AddContactForm/AddContactForm.jsx","components/Contacts/Filter/Filter.jsx","components/Contacts/ContactList/Contact.jsx","components/Contacts/ContactList/namesConstants.js","components/Contacts/ContactList/ContactList.jsx","components/Contacts/Contacts.jsx","components/PhoneBook.jsx","components/ContactProperties/ContactProperties.jsx","components/App.js","redux/contact/contactReducer.js","redux/rootReducer.js","configurestore.js","index.js"],"names":["module","exports","addContact","contact","type","payload","delContact","id","saveEditName","name","saveEditPhone","phone","saveEditAddress","address","saveEditCompany","company","saveEditEmail","email","AddContactForm","state","formErrors","nameValid","phoneValid","handleChange","event","nam","target","val","value","setState","validateField","fieldName","isValid","length","handleSubmit","newContact","Date","now","toString","preventDefault","props","this","formValid","onSubmit","className","s","addContactFormWrapper","addContactForm","fieldHeader","maxLength","onChange","placeholder","entryField","error","onClick","disabled","btnWriteDown","btnWriteDownActive","btnWriteDownDisable","Component","Filter","handleKeyPress","e","query","search","currentTarget","toLowerCase","searchString","qs","stringify","history","push","parse","location","filterWrapper","src","searchIcon","alt","searchField","withRouter","Contact","isEditName","isEditphone","isEditAddress","isEditCompany","isEditEmail","handleDelete","handleDblClickFor","propertyName","propName","window","addEventListener","handleKeyUp","handleKeyUpEscape","handleChangeFor","trimName","trim","handelCancel","isEditPhone","removeEventListener","handleSaveFor","key","console","log","index","serialNumber","tableCell","onBlur","onKeyPress","autoFocus","editContact","onDoubleClick","number","del","to","detail","ContactList","contacts","table","colSerNum","colName","colPhone","colAddress","colCompany","colEmail","colDelProp","span","tableCellHeader","map","propTypes","PropTypes","string","func","Contacts","filterContact","wrapperContacts","wrap","title","wrapper","PhoneBook","filterContacts","arr","searchKey","filter","obj","Object","keys","some","includes","connect","router","dispatch","bindActionCreators","ownProps","itemId","match","params","contactProperties","contactDetail","detailName","App","exact","path","component","ContactProperties","initialState","action","c","t","createRootReducer","combineReducers","connectRouter","contactReducer","persistedState","localStorage","getItem","JSON","createBrowserHistory","store","createStore","compose","applyMiddleware","routerMiddleware","devToolsEnhancer","subscribe","setItem","getState","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0270e45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"contactList_table__ZmKAs\",\"tableCellHeader\":\"contactList_tableCellHeader__rOyC2\",\"tableCell\":\"contactList_tableCell__1F4aX\",\"editContact\":\"contactList_editContact__1etSS\",\"serialNumber\":\"contactList_serialNumber__7J4px\",\"del\":\"contactList_del__1w9U0\",\"colSerNum\":\"contactList_colSerNum__FaE34\",\"colName\":\"contactList_colName__3N6NL\",\"colPhone\":\"contactList_colPhone__6GIT4\",\"colAddress\":\"contactList_colAddress__1Omg8\",\"colCompany\":\"contactList_colCompany__2mvnH\",\"colEmail\":\"contactList_colEmail__1Vwot\",\"colDelProp\":\"contactList_colDelProp__2LZ0S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactProperties\":\"contactProperties_contactProperties__3H4Su\",\"name\":\"contactProperties_name__1Rpy1\",\"contactDetail\":\"contactProperties_contactDetail__3UCiM\",\"detailName\":\"contactProperties_detailName__3hCI3\",\"detail\":\"contactProperties_detail__xLh7J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperContacts\":\"contacts_wrapperContacts__m3Fzn\",\"title\":\"contacts_title__1R7cy\",\"wrapper\":\"contacts_wrapper__3z4po\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"filter_filterWrapper__1GyEa\",\"search\":\"filter_search__1QLME\",\"searchField\":\"filter_searchField__1KPxW\"};","module.exports = __webpack_public_path__ + \"static/media/search.822bc171.svg\";","module.exports = __webpack_public_path__ + \"static/media/detail.01eb1f84.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContactFormWrapper\":\"addContactForm_addContactFormWrapper__1bqNr\",\"addContactForm\":\"addContactForm_addContactForm__2j-HP\",\"entryField\":\"addContactForm_entryField__1GBeh\",\"fieldHeader\":\"addContactForm_fieldHeader__2_28f\",\"btnWriteDown\":\"addContactForm_btnWriteDown__1dMN9\",\"btnWriteDownActive\":\"addContactForm_btnWriteDownActive__2mrjU\",\"btnWriteDownDisable\":\"addContactForm_btnWriteDownDisable__2yqDA\",\"error\":\"addContactForm_error__2_XQO\"};","import { \r\n  ADD_CONTACT,\r\n  DELETE_CONTACT, \r\n  SAVE_EDIT_NAME, \r\n  SAVE_EDIT_PHONE, \r\n  SAVE_EDIT_ADDRESS, \r\n  SAVE_EDIT_COMPANY, \r\n  SAVE_EDIT_EMAIL \r\n} from './types';\r\n\r\nexport const addContact = contact => ({\r\n  type: ADD_CONTACT,\r\n  payload: contact,\r\n});\r\n\r\nexport const delContact = id => ({\r\n  type: DELETE_CONTACT,\r\n  payload: id,\r\n});\r\n\r\nexport const saveEditName = (id, name)  => ({\r\n  type: SAVE_EDIT_NAME,\r\n  payload: { id, name },\r\n});\r\n\r\nexport const saveEditPhone = (id, phone) => ({\r\n\ttype: SAVE_EDIT_PHONE,\r\n\tpayload: { id, phone },\r\n});\r\n\r\nexport const saveEditAddress = (id, address) => ({\r\n\ttype: SAVE_EDIT_ADDRESS,\r\n\tpayload: { id, address },\r\n});\r\n\r\nexport const saveEditCompany = (id, company) => ({\r\n\ttype: SAVE_EDIT_COMPANY,\r\n\tpayload: { id, company },\r\n});\r\n\r\nexport const saveEditEmail = (id, email) => ({\r\n\ttype: SAVE_EDIT_EMAIL,\r\n\tpayload: { id, email },\r\n});","export const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const SAVE_EDIT_NAME = 'SAVE_EDIT_NAME';\r\nexport const SAVE_EDIT_PHONE = 'SAVE_EDIT_PHONE';\r\nexport const SAVE_EDIT_ADDRESS = 'SAVE_EDIT_ADDRESS';\r\nexport const SAVE_EDIT_COMPANY = 'SAVE_EDIT_COMPANY';\r\nexport const SAVE_EDIT_EMAIL = 'SAVE_EDIT_EMAIL';\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './addContactForm.module.scss';\r\n\r\nclass AddContactForm extends Component {\r\n\r\n  state = {\r\n    formErrors: {\r\n      name: '', \r\n      phone: '',\r\n    },\r\n    nameValid: false, \r\n    phoneValid: false,\r\n  }\r\n\r\n  handleChange = event => {\r\n    const nam = event.target.name;\r\n    const val = event.target.value;\r\n\r\n    this.setState({[nam]: val},\r\n                  () => { this.validateField(nam, val) })\r\n  }\r\n\r\n  validateField = (fieldName, value)  => {\r\n    const { formErrors } = this.state;\r\n\r\n    switch (fieldName) {\r\n      case 'name':{\r\n        const isValid = value.length >= 2;\r\n        this.setState({ \r\n          formErrors: {\r\n            ...formErrors,\r\n            name: isValid ? '' : 'Введите имя*',\r\n          },\r\n          nameValid: isValid,\r\n        });\r\n        break;}\r\n\r\n      case 'phone': {\r\n        const isValid = value.length >= 3;\r\n        this.setState({ \r\n          formErrors: {\r\n            ...formErrors,\r\n            phone: isValid ? '' : 'Введите номер телефона*',\r\n          },\r\n          phoneValid: isValid,\r\n        });\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    const {\r\n      name,\r\n      phone,\r\n      address,\r\n      company,\r\n      email,\r\n    } = this.state;\r\n\r\n    const newContact = {\r\n      id: Date.now().toString(), \r\n      name,\r\n      phone,\r\n      address,\r\n      company,\r\n      email,\r\n    };\r\n\r\n    event.preventDefault();\r\n    this.props.addContact(newContact);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      formErrors,\r\n      nameValid,\r\n      phoneValid,\r\n    } = this.state;\r\n\r\n    const formValid = nameValid && phoneValid;\r\n\r\n    return (\r\n      <form\r\n        onSubmit={this.handleSubmit}\r\n        className={s.addContactFormWrapper}\r\n      >\r\n        <label \r\n          className={s.addContactForm}\r\n        >\r\n          <div>\r\n            <p className={s.fieldHeader}>Phone</p>\r\n            <input \r\n              name='phone'\r\n              type='tel'\r\n              maxLength='20'\r\n              onChange={this.handleChange}\r\n              placeholder='8-800-555-35-35'\r\n              className={s.entryField}\r\n            />\r\n            <p className={s.error}>{formErrors.phone}</p>\r\n\r\n            <p className={s.fieldHeader}>Name</p>\r\n            <input \r\n              name='name'\r\n              type='text'\r\n              maxLength='35'\r\n              onChange={this.handleChange}\r\n              placeholder='Owen Lars'\r\n              className={s.entryField}\r\n            />\r\n            <p className={s.error}>{formErrors.name}</p>\r\n\r\n            <p className={s.fieldHeader}>Email</p>\r\n            <input \r\n              name='email'\r\n              type='email'\r\n              maxLength='30'\r\n              onChange={this.handleChange}\r\n              placeholder='OwenL@gmail.com'\r\n              className={s.entryField}\r\n            />\r\n            <p className={s.error}></p>\r\n          </div>\r\n\r\n          <div>\r\n            <p className={s.fieldHeader}>Company</p>\r\n            <input \r\n              name='company'\r\n              type='text'\r\n              maxLength='20'\r\n              onChange={this.handleChange}\r\n              placeholder='DEKO-Line'\r\n              className={s.entryField}\r\n            />\r\n            <p className={s.error}></p>\r\n\r\n            <p className={s.fieldHeader}>Address</p>\r\n            <input \r\n              name='address'\r\n              type='text'\r\n              maxLength='30'\r\n              onChange={this.handleChange}\r\n              placeholder='East Victoria Park, WA 6101'\r\n              className={s.entryField}\r\n            />\r\n            <p className={s.error}></p>\r\n          </div>\r\n        </label>\r\n\r\n        <button\r\n          onClick={this.handleSubmit}\r\n          disabled={!formValid}\r\n          className={!formValid ? `${s.btnWriteDown} ${s.btnWriteDownDisable}` : `${s.btnWriteDown} ${s.btnWriteDownActive}`}\r\n        >\r\n          add contact\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nAddContactForm.propTypes = {\r\n  name: PropTypes.string, \r\n  phone: PropTypes.string, \r\n  address: PropTypes.string, \r\n  company: PropTypes.string, \r\n  email: PropTypes.string,\r\n}\r\n\r\nexport default AddContactForm;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'query-string';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport searchIcon from './search.svg';\r\n\r\nimport s from './filter.module.scss';\r\n\r\nclass Filter extends Component {\r\n  handleKeyPress = e => {\r\n    const query = { search: e.currentTarget.value.toLowerCase() };\r\n    const searchString = qs.stringify(query);\r\n\r\n    this.props.history.push({\r\n      search: searchString\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const {search} = qs.parse(this.props.location.search);\r\n\r\n    return (\r\n      <div className={s.filterWrapper}>\r\n        <img src={searchIcon} className={s.search} alt=\"search\" />\r\n        <input \r\n          value={search}\r\n          className={s.searchField}\r\n          onChange={this.handleKeyPress}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nFilter.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    phone: PropTypes.string,\r\n    address: PropTypes.string,\r\n    company: PropTypes.string,\r\n    email: PropTypes.string,\r\n  })),\r\n};\r\n\r\nexport default withRouter(Filter);\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport detail from './detail.svg';\r\n\r\nimport { \r\n  nameConst,\r\n  phoneConst, \r\n  addressConst, \r\n  companyConst, \r\n  emailConst \r\n} from './namesConstants.js';\r\n\r\nimport s from './contactList.module.scss';\r\n\r\nclass Contact extends Component {\r\n\r\n  state = {\r\n\t\tvalue: '',\r\n    isEditName: false,\r\n    isEditphone: false,\r\n    isEditAddress: false,\r\n    isEditCompany: false,\r\n    isEditEmail: false,\r\n  }\r\n\r\n  handleDelete = () => {\r\n    const { id, delContact } = this.props;\r\n\r\n\t\tdelContact(id);\r\n  }\r\n\r\n  handleDblClickFor = propertyName => () => {\r\n    const propName = propertyName.toString().toLowerCase();\r\n\r\n\t\tthis.setState({ \r\n\t\t\t['isEdit'+[propertyName]]: true,\r\n      value: this.props[propName],\r\n    });\r\n\r\n    window.addEventListener('keydown', this.handleKeyUp);\r\n\t\twindow.addEventListener('keydown', this.handleKeyUpEscape);\r\n  }\r\n  \r\n  handleChangeFor = () => event => {\r\n    const trimName = event.currentTarget.value;\r\n\r\n\t\tif (trimName.trim()) {\r\n\t\t\tthis.setState({value: trimName});\r\n\t\t}\r\n  }\r\n  \r\n  handelCancel = () => {\r\n\t\tthis.setState({ \r\n      isEditName: false,\r\n      isEditPhone: false,\r\n      isEditAddress: false,\r\n      isEditCompany: false,\r\n      isEditEmail: false,\r\n    });\r\n    window.removeEventListener('keydown', this.handleKeyUp);\r\n\t\twindow.removeEventListener('keydown', this.handleKeyUpEscape);\r\n  }\r\n  \r\n  handleSaveFor = propertyName => () => {\r\n\t\tconst { id } = this.props;\r\n    const { value } = this.state;\r\n\r\n    this.props['saveEdit'+[propertyName]](id, value);\r\n\t\tthis.handelCancel();\r\n\t}\r\n\r\n\thandleKeyUp = propertyName => e => {\r\n    const { id } = this.props;\r\n    const { value } = this.state;\r\n\r\n\t\tif (e.key === 'Enter') {\r\n      console.log('Enter')\r\n      this.props['saveEdit'+[propertyName]](id, value);\r\n      this.handelCancel();\r\n\t\t}\r\n  }\r\n\r\n  handleKeyUpEscape = e => {\r\n\t\tif (e.key === 'Escape') {\r\n      this.handelCancel();\r\n\t\t}\r\n  }\r\n  \r\n  render() {\r\n    const { \r\n      name, \r\n      phone, \r\n      address, \r\n      company, \r\n      email,\r\n      index,\r\n    } = this.props;\r\n    \r\n    const {\r\n      value,\r\n      isEditName, \r\n      isEditPhone,\r\n      isEditAddress,\r\n      isEditCompany,\r\n      isEditEmail,\r\n    } = this.state;\r\n\r\n    return(\r\n      <tr>\r\n        <td className={`${s.serialNumber}`}>\r\n          <p>{index+1}</p>\r\n        </td>\r\n\r\n        {isEditName ? (   \r\n          <td className={`${s.tableCell} ${s.name}`}>\r\n            <input \r\n              name={nameConst}\r\n              type='text'\r\n              maxLength='30'\r\n              value={value} \r\n              onChange={this.handleChangeFor()}\r\n              onBlur={this.handleSaveFor(nameConst)}\r\n              onKeyPress={this.handleKeyUp(nameConst)}\r\n              autoFocus={true}\r\n              className={s.editContact}\r\n            />\r\n          </td>              \r\n          ) : (\r\n          <td \r\n            name={nameConst}\r\n            className={`${s.tableCell} ${s.name}`}\r\n            onDoubleClick={this.handleDblClickFor(nameConst)}\r\n          >\r\n            {name}\r\n          </td>\r\n          )\r\n        }\r\n\r\n        {isEditPhone ? (  \r\n          <td className={`${s.tableCell} ${s.name}`}>\r\n            <input \r\n              name={phoneConst}\r\n              type='tel'\r\n              maxLength='20'\r\n              value={value} \r\n              onChange={this.handleChangeFor()}\r\n              onBlur={this.handleSaveFor(phoneConst)}\r\n              onKeyPress={this.handleKeyUp(phoneConst)}\r\n              autoFocus={true}\r\n              className={s.editContact}\r\n            />\r\n          </td>\r\n          ) : (\r\n          <td \r\n            className={`${s.tableCell} ${s.number}`}\r\n            onDoubleClick={this.handleDblClickFor(phoneConst)}\r\n          >\r\n            {phone}\r\n          </td>\r\n          )\r\n        }\r\n            \r\n        {isEditAddress ? (  \r\n          <td className={`${s.tableCell} ${s.address}`}>\r\n            <input \r\n              name={addressConst}\r\n              type='text'\r\n              value={value} \r\n              maxLength='30'\r\n              onChange={this.handleChangeFor()}\r\n              onBlur={this.handleSaveFor(addressConst)}\r\n              onKeyPress={this.handleKeyUp(addressConst)}\r\n              autoFocus={true}\r\n              className={s.editContact}\r\n            />\r\n          </td>\r\n          ) : (\r\n          <td \r\n            className={`${s.tableCell} ${s.address}`}\r\n            onDoubleClick={this.handleDblClickFor(addressConst)}\r\n          >\r\n            {address}\r\n          </td>\r\n          )\r\n        }\r\n\r\n        {isEditCompany ? (  \r\n          <td className={`${s.tableCell} ${s.company}`}>\r\n            <input \r\n              name={companyConst}\r\n              type='text'\r\n              maxLength='25'\r\n              value={value} \r\n              onChange={this.handleChangeFor()}\r\n              onBlur={this.handleSaveFor(companyConst)}\r\n              onKeyPress={this.handleKeyUp(companyConst)}\r\n              autoFocus={true}\r\n              className={s.editContact}\r\n            />\r\n          </td>\r\n          ) : (\r\n          <td \r\n            className={`${s.tableCell} ${s.company}`}\r\n            onDoubleClick={this.handleDblClickFor(companyConst)}\r\n          >\r\n            {company}\r\n          </td>\r\n          )\r\n        }\r\n\r\n        {isEditEmail ? (  \r\n          <td className={`${s.tableCell} ${s.email}`}>\r\n            <input \r\n              name={emailConst}\r\n              type='text'\r\n              maxLength='30'\r\n              value={value} \r\n              onChange={this.handleChangeFor()}\r\n              onBlur={this.handleSaveFor(emailConst)}\r\n              onKeyPress={this.handleKeyUp(emailConst)}\r\n              autoFocus={true}\r\n              className={s.editContact}\r\n            />\r\n          </td>\r\n          ) : (\r\n          <td \r\n            className={`${s.tableCell} ${s.email}`}\r\n            onDoubleClick={this.handleDblClickFor(emailConst)}\r\n          >\r\n            {email}\r\n          </td>\r\n          )\r\n        }\r\n\r\n        <td className={`${s.tableCell}`}>\r\n          <button \r\n            type=\"button\"\r\n            onClick={this.handleDelete}\r\n            className={s.del}\r\n          >\r\n            &times;\r\n          </button>\r\n        </td>\r\n\r\n        <td className={`${s.tableCell}`}>\r\n          <NavLink to={`/items/${index+1}`}>  \r\n            <img src={detail} alt=\"detail\" />\r\n          </NavLink>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string, \r\n  phone: PropTypes.string, \r\n  address: PropTypes.string, \r\n  company: PropTypes.string, \r\n  email: PropTypes.string,\r\n}\r\n\r\nexport default Contact;","export const nameConst = 'Name';\r\n\r\nexport const phoneConst = 'Phone';\r\n\r\nexport const addressConst = 'Address';\r\n\r\nexport const companyConst = 'Company';\r\n\r\nexport const emailConst = 'Email';\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './contactList.module.scss';\r\nimport Contact from './Contact';\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    const { \r\n      contacts, \r\n      delContact, \r\n      saveEditName, \r\n      saveEditPhone, \r\n      saveEditAddress, \r\n      saveEditCompany, \r\n      saveEditEmail,\r\n    } = this.props;\r\n\r\n    return (\r\n        <table className={s.table}>\r\n          <colgroup>\r\n            <col className={s.colSerNum} />\r\n            <col className={s.colName} />\r\n            <col className={s.colPhone} />\r\n            <col className={s.colAddress} />\r\n            <col className={s.colCompany} />\r\n            <col className={s.colEmail} />\r\n            <col className={s.colDelProp} span='2'/>\r\n          </colgroup>\r\n          <tbody>\r\n            <tr>\r\n              <td className={s.tableCellHeader}>\r\n                {/* is empty */}\r\n              </td>\r\n              <td className={s.tableCellHeader}>\r\n                NAME\r\n              </td>\r\n\r\n              <td className={s.tableCellHeader}>\r\n                PHONE\r\n              </td>\r\n\r\n              <td className={s.tableCellHeader}>\r\n                ADDRESS\r\n              </td>\r\n\r\n              <td className={s.tableCellHeader}>\r\n                COMPANY\r\n              </td>\r\n\r\n              <td className={s.tableCellHeader}>\r\n                EMAIL\r\n              </td>\r\n              <td className={s.tableCellHeader}>\r\n                {/* is empty */}\r\n              </td>  \r\n\r\n              <td className={s.tableCellHeader}>\r\n                {/* is empty */}\r\n              </td>\r\n            </tr>\r\n\r\n            {contacts.map(({id, name, phone, address, company, email}, index) => (\r\n              <Contact \r\n                key={id}\r\n                id={id}\r\n                name={name}\r\n                phone={phone}\r\n                address={address}\r\n                company={company}\r\n                email={email}\r\n                index={index}\r\n                delContact={delContact}\r\n                saveEditName={saveEditName}\r\n                saveEditPhone={saveEditPhone}\r\n                saveEditAddress={saveEditAddress}\r\n                saveEditCompany={saveEditCompany}\r\n                saveEditEmail={saveEditEmail}\r\n              />))\r\n            }\r\n          </tbody>\r\n        </table>\r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string, \r\n  phone: PropTypes.string, \r\n  address: PropTypes.string, \r\n  company: PropTypes.string, \r\n  email: PropTypes.string,\r\n  delContact: PropTypes.func,\r\n  saveEditName: PropTypes.func,\r\n  saveEditPhone: PropTypes.func,\r\n  saveEditAddress: PropTypes.func,\r\n  saveEditCompany: PropTypes.func,\r\n  saveEditEmail: PropTypes.func,\r\n}\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AddContactForm from './AddContactForm';\r\nimport Filter from './Filter';\r\nimport ContactList from './ContactList';\r\n\r\nimport s from './contacts.module.scss';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    const { \r\n      addContact, \r\n      contacts, \r\n      filterContact, \r\n      delContact, \r\n      saveEditName, \r\n      saveEditPhone,\r\n      saveEditAddress,\r\n      saveEditCompany,\r\n      saveEditEmail,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={s.wrapperContacts}>\r\n        <div className={s.wrap}>\r\n          <h1 className={s.title}>phone book</h1>\r\n\r\n          <div className={s.wrapper}>\r\n            <Filter\r\n              contacts={contacts}\r\n              filterContact={filterContact}\r\n            />\r\n            \r\n            <ContactList\r\n              delContact={delContact}\r\n              contacts={contacts}\r\n              saveEditName={saveEditName}\r\n              saveEditPhone={saveEditPhone}\r\n              saveEditAddress={saveEditAddress}\r\n              saveEditCompany={saveEditCompany}\r\n              saveEditEmail={saveEditEmail}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <AddContactForm\r\n          addContact={addContact}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    phone: PropTypes.string,\r\n    address: PropTypes.string,\r\n    company: PropTypes.string,\r\n    email: PropTypes.string,\r\n  })), \r\n  addContact: PropTypes.func,\r\n  delContact: PropTypes.func,\r\n  saveEditName: PropTypes.func,\r\n  saveEditPhone: PropTypes.func,\r\n  saveEditAddress: PropTypes.func,\r\n  saveEditCompany: PropTypes.func,\r\n  saveEditEmail: PropTypes.func,\r\n}\r\n\r\nexport default Contacts;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport qs from 'query-string';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { \r\n  addContact, \r\n  delContact, \r\n  saveEditName, \r\n  saveEditPhone, \r\n  saveEditAddress, \r\n  saveEditCompany,\r\n  saveEditEmail,\r\n} from '../redux/contact/actions.js';\r\n\r\nimport Contacts from './Contacts';\r\n\r\nclass PhoneBook extends Component {\r\n  render() {\r\n    const { \r\n      addContact, \r\n      contacts, \r\n      delContact, \r\n      saveEditName, \r\n      saveEditPhone,\r\n      saveEditAddress,\r\n      saveEditCompany,\r\n      saveEditEmail,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Contacts\r\n          addContact={addContact}\r\n          delContact={delContact}\r\n          contacts={contacts}\r\n          saveEditName={saveEditName}\r\n          saveEditPhone={saveEditPhone}\r\n          saveEditAddress={saveEditAddress}\r\n          saveEditCompany={saveEditCompany}\r\n          saveEditEmail={saveEditEmail}\r\n        />\r\n      </div>\r\n    )\r\n  };\r\n};\r\n\r\nconst filterContacts = (arr, searchKey) => {\r\n  const { search } = qs.parse(searchKey);\r\n  \r\n  return arr.filter(obj => Object.keys(obj).some(key => obj[key].toLowerCase().includes(search)));\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: filterContacts(state.contacts, state.router.location.search),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({\r\n    addContact,\r\n    delContact,\r\n    saveEditName,\r\n    saveEditPhone,\r\n    saveEditAddress,\r\n    saveEditCompany,\r\n    saveEditEmail,\r\n  }, dispatch);\r\n\r\n  PhoneBook.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      phone: PropTypes.string,\r\n      address: PropTypes.string,\r\n      company: PropTypes.string,\r\n      email: PropTypes.string,\r\n    })),\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBook);\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nimport s from './contactProperties.module.scss';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ContactProperties = ({ contact }) => {\r\n  return (\r\n    <div className={s.contactProperties}>\r\n      <h1 className={s.name}>{contact.name}</h1>\r\n\r\n      <div className={s.contactDetail}>\r\n        <h5 className={s.detailName}>PHONE</h5>\r\n        <p className={s.detail}>{contact.phone}</p>\r\n\r\n        <h5 className={s.detailName}>ADDRESS</h5>\r\n        <p className={s.detail}>{contact.address}</p>\r\n\r\n        <h5 className={s.detailName}>COMPANY</h5>\r\n        <p className={s.detail}>{contact.company}</p>\r\n\r\n        <h5 className={s.detailName}>EMAIL</h5>\r\n        <p className={s.detail}>{contact.email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const itemId = ownProps.match.params.itemId;\r\n  const contact = state.contacts[itemId-1]\r\n\r\n  return {\r\n    contact: contact,\r\n  };\r\n};\r\n\r\nexport default connect (mapStateToProps)(ContactProperties);\r\n","import React from 'react';\r\n\r\nimport PhoneBook from './PhoneBook';\r\nimport ContactProperties from './ContactProperties';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Switch>\r\n          <Route exact path='/phoneBook' component={PhoneBook} />\r\n          <Route exact path=\"/items/:itemId\" component={ContactProperties} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { \r\n  ADD_CONTACT, \r\n  DELETE_CONTACT, \r\n  SAVE_EDIT_NAME, \r\n  SAVE_EDIT_PHONE, \r\n  SAVE_EDIT_ADDRESS,\r\n  SAVE_EDIT_COMPANY,\r\n  SAVE_EDIT_EMAIL, \r\n} from \"./types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CONTACT:\r\n      return [...state, action.payload];\r\n\r\n    case DELETE_CONTACT:\r\n      return state.filter(c =>(c.id !== action.payload));\r\n\r\n    case SAVE_EDIT_NAME:\r\n\t\t\treturn state.map(t => {\r\n\t\t\t\tif (t.id === action.payload.id) {\r\n\t\t\t\t\tt.name = action.payload.name;\r\n\t\t\t\t}\r\n\t\t\t\treturn t;\r\n      });\r\n      \r\n    case SAVE_EDIT_PHONE:\r\n      return state.map(t => {\r\n        if (t.id === action.payload.id) {\r\n          t.phone = action.payload.phone;\r\n        }\r\n        return t;\r\n      });\r\n\r\n    case SAVE_EDIT_ADDRESS:\r\n      return state.map(t => {\r\n        if (t.id === action.payload.id) {\r\n          t.address = action.payload.address;\r\n        }\r\n        return t;\r\n      });\r\n\r\n    case SAVE_EDIT_COMPANY:\r\n      return state.map(t => {\r\n        if (t.id === action.payload.id) {\r\n          t.company = action.payload.company;\r\n        }\r\n        return t;\r\n      });\r\n\r\n    case SAVE_EDIT_EMAIL:\r\n      return state.map(t => {\r\n        if (t.id === action.payload.id) {\r\n          t.email = action.payload.email\r\n        }\r\n        return t;\r\n      });\r\n\r\n    default: return state;\r\n  }\r\n} ","import { combineReducers } from \"redux\";\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nimport contactReducer from \"./contact/contactReducer.js\";\r\n\r\nconst createRootReducer = (history) => combineReducers({\r\n\trouter: connectRouter(history),\r\n\tcontacts: contactReducer,\r\n})\r\n\r\nexport default createRootReducer;","import { routerMiddleware } from 'connected-react-router';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport createRootReducer from './redux/rootReducer.js';\r\n\r\nconst persistedState = localStorage.getItem('reduxState') \r\n                       ? { contacts: JSON.parse(localStorage.getItem('reduxState')) }\r\n                       : {}\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nexport default function configureStore(persistedState) {\r\n  const store = createStore(\r\n    createRootReducer(history),\r\n    persistedState,\r\n    compose(\r\n      applyMiddleware(\r\n        routerMiddleware(history),\r\n\t\t\t),\r\n\t\t\tdevToolsEnhancer(),\r\n\t\t),\r\n  )\r\n\r\n  return store\r\n}\r\n\r\nexport const store = configureStore(persistedState);\r\n\r\nstore.subscribe(()=>{\r\n\tlocalStorage.setItem('reduxState', JSON.stringify(store.getState().contacts))\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './components/App';\r\nimport {history, store} from './configurestore'\r\n\r\nconst app = (\r\n\t<Provider store={ store }>\r\n\t\t<ConnectedRouter history={history}>\r\n\t\t\t<App />\r\n    </ConnectedRouter>\r\n\t</Provider>\r\n)\r\n\r\nReactDOM.render(app , document.getElementById('root'));\r\n"],"sourceRoot":""}