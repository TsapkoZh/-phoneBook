{"version":3,"sources":["redux/contact/actions.js","redux/contact/types.js","components/Contacts/AddContactForm/TextInput/TextInput.jsx","components/Contacts/AddContactForm/AddContactForm.jsx","components/Contacts/Filter/Filter.jsx","components/Contacts/ContactList/EditableValue/EditableValue.jsx","components/Contacts/ContactList/Contact.jsx","components/Contacts/ContactList/ContactList.jsx","components/Contacts/Contacts.jsx","components/PhoneBook.jsx","components/ContactProperties/ContactProperties.jsx","components/App.js","redux/contact/contactReducer.js","redux/rootReducer.js","configurestore.js","index.js","components/Contacts/AddContactForm/addContactForm.module.scss","components/ContactProperties/contactProperties.module.scss","components/Contacts/contacts.module.scss","components/Contacts/Filter/filter.module.scss","components/Contacts/ContactList/contactList.module.scss","components/Contacts/Filter/search.svg","components/Contacts/ContactList/detail.svg"],"names":["addContact","contact","type","payload","delContact","id","saveEditFields","fieldName","value","TextInput","label","props","useField","field","meta","className","s","addContactForm","fieldHeader","htmlFor","name","touched","error","entryField","hasError","formMessage","fields","placeholder","AddContactForm","addContactFormWrapper","title","initialValues","phone","address","company","email","validationSchema","Yup","max","required","onSubmit","values","setSubmitting","resetForm","Date","now","toString","formWrapper","map","element","key","btnWriteDown","Filter","handleKeyPress","e","query","search","currentTarget","toLowerCase","searchString","qs","stringify","history","push","parse","this","location","filterWrapper","src","searchIcon","alt","searchField","onChange","PureComponent","withRouter","EditableValue","handleDblClick","setState","isEdit","window","addEventListener","handleKeyUpEnter","handleKeyUpEscape","handleChange","event","trimName","trim","handleSave","state","handelCancel","removeEventListener","maxLength","tableCell","onDoubleClick","onBlur","onKeyPress","handleKeyUp","autoFocus","editContact","Contact","handleDelete","handleSaveEdit","index","serialNumber","el","onClick","del","to","detail","tableHeads","ContactList","contacts","table","colSerNum","colName","colPhone","colAddress","colCompany","colEmail","colDelProp","span","tableCellHeader","propTypes","PropTypes","string","func","Contacts","wrapperContacts","wrap","wrapper","PhoneBook","filterContacts","arr","searchKey","filter","obj","Object","keys","some","includes","connect","router","dispatch","bindActionCreators","ownProps","itemId","match","params","contactProperties","contactDetail","detailName","App","exact","path","component","ContactProperties","initialState","action","c","t","nameField","createRootReducer","combineReducers","connectRouter","contactReducer","persistedState","localStorage","getItem","JSON","createBrowserHistory","store","createStore","compose","applyMiddleware","routerMiddleware","devToolsEnhancer","subscribe","setItem","getState","app","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.27b2e6c1.chunk.js","sourcesContent":["import { \r\n  ADD_CONTACT,\r\n  DELETE_CONTACT, \r\n  SAVE_EDIT_FIELDS, \r\n} from './types';\r\n\r\nexport const addContact = contact => ({\r\n  type: ADD_CONTACT,\r\n  payload: contact,\r\n});\r\n\r\nexport const delContact = id => ({\r\n  type: DELETE_CONTACT,\r\n  payload: id,\r\n});\r\n\r\nexport const saveEditFields = (id, fieldName, value) => ({\r\n  type: SAVE_EDIT_FIELDS,\r\n  payload: { id, fieldName, value },\r\n });","export const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const SAVE_EDIT_FIELDS = 'SAVE_EDIT_FIELDS';\r\n\r\n\r\n","import React from 'react';\r\nimport { useField } from 'formik';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from '../addContactForm.module.scss';\r\n\r\nconst TextInput  = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n\r\n  return (\r\n    <div className={s.addContactForm}>\r\n      <label \r\n        className={s.fieldHeader} \r\n        htmlFor={props.id || props.name}\r\n      >\r\n        {label}\r\n      </label>\r\n\r\n      <input \r\n        {...field} \r\n        {...props} \r\n        className={meta.touched && meta.error ? \r\n          `${s.entryField} ${s.hasError}` \r\n          : s.entryField}\r\n      />\r\n\r\n      <div \r\n        className={s.formMessage}>\r\n        {meta.touched && meta.error ? (\r\n          <>{meta.error}</>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInput.propTypes = {\r\n  label: PropTypes.string, \r\n  name: PropTypes.string, \r\n  placeholder: PropTypes.string, \r\n  type: PropTypes.string, \r\n}\r\n\r\nexport default TextInput;","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport TextInput from './TextInput'\r\n\r\nimport s from './addContactForm.module.scss';\r\n\r\nconst fields = [\r\n  {\r\n    label: 'Name',\r\n    name: 'name',\r\n    type: 'text',\r\n    placeholder: 'Tsapko Evgenii',\r\n  },\r\n  {\r\n    label: 'Phone',\r\n    name: 'phone',\r\n    type: 'tel',\r\n    placeholder: '+7(965)723-41-49',\r\n  },\r\n  {\r\n    label: 'Address',\r\n    name: 'address',\r\n    type: 'text',\r\n    placeholder: 'Ylitsa Stroiteleii, 16/24',\r\n  },\r\n  {\r\n    label: 'Company',\r\n    name: 'company',\r\n    type: 'text',\r\n    placeholder: 'Deko-line',\r\n  },\r\n  {\r\n    label: 'Email',\r\n    name: 'email',\r\n    type: 'email',\r\n    placeholder: 'TsapkoZh@gmail.com',\r\n  },\r\n]\r\n\r\nconst AddContactForm = props => {\r\n  return (\r\n    <div className={s.addContactFormWrapper}>\r\n      <h1 className={s.title}>add contact</h1>\r\n\r\n      <Formik\r\n        initialValues={{\r\n          name: '',\r\n          phone: '',\r\n          address: '',\r\n          company: '',\r\n          email: '',\r\n        }}\r\n\r\n        validationSchema={Yup.object({\r\n          name: Yup.string()\r\n            .max(30, 'Must be 30 characters or less')\r\n            .required('Required'),\r\n          phone: Yup.string()\r\n            .max(20, 'Must be 20 characters or less')\r\n            .required('Required'),\r\n          email: Yup.string()\r\n            .email('Invalid email address')\r\n            .required('Required'),\r\n        })}\r\n\r\n        onSubmit={(values, { setSubmitting, resetForm }) => {\r\n          setSubmitting(true)\r\n          // resetForm()\r\n          props.addContact({ id: Date.now().toString(), ...values });\r\n        }}\r\n      >\r\n        <Form className={s.formWrapper}>\r\n          {\r\n            fields.map(element => (\r\n              <TextInput \r\n                {...element}\r\n                key={element.name}\r\n              />\r\n            ))\r\n          }\r\n\r\n          <button className={s.btnWriteDown} type=\"submit\">ADD CONTACT</button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddContactForm;","import React, { PureComponent } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'query-string';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport searchIcon from './search.svg';\r\n\r\nimport s from './filter.module.scss';\r\n\r\nclass Filter extends PureComponent {\r\n  handleKeyPress = e => {\r\n    const query = { search: e.currentTarget.value.toLowerCase() };\r\n    const searchString = qs.stringify(query);\r\n\r\n    this.props.history.push({\r\n      search: searchString\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const { search } = qs.parse(this.props.location.search);\r\n\r\n    return (\r\n      <div className={s.filterWrapper}>\r\n        <img src={searchIcon} className={s.search} alt=\"search\" />\r\n        <input \r\n          value={search}\r\n          className={s.searchField}\r\n          onChange={this.handleKeyPress}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nFilter.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    phone: PropTypes.string,\r\n    address: PropTypes.string,\r\n    company: PropTypes.string,\r\n    email: PropTypes.string,\r\n  })),\r\n};\r\n\r\nexport default withRouter(Filter);\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from '../contactList.module.scss';\r\n\r\nclass EditableValue extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isEdit: false,\r\n      value: props.value,\r\n    }\r\n  }\r\n  handleDblClick = () => {\r\n    this.setState({\r\n      isEdit: true,\r\n    })\r\n\r\n    window.addEventListener('keydown', this.handleKeyUpEnter);\r\n\t\twindow.addEventListener('keydown', this.handleKeyUpEscape);\r\n  };\r\n\r\n  handleChange = event => {\r\n    const trimName = event.currentTarget.value.trim();\r\n\r\n\t\tif (trimName !== '') {\r\n\t\t\tthis.setState({value: trimName});\r\n\t\t}\r\n  };\r\n\r\n  handleSave = () => {\r\n    const { name } = this.props;\r\n    const { value } = this.state;\r\n\r\n    this.props.saveEditFields(name, value);\r\n    this.setState({ isEdit: false });\r\n  };\r\n\r\n  handleKeyUpEnter = e => {\r\n\t\tif (e.key === 'Enter') {\r\n      this.handleSave()\r\n\t\t}\r\n  }\r\n\r\n  handleKeyUpEscape = e => {\r\n\t\tif (e.key === 'Escape') {\r\n      this.handelCancel();\r\n\t\t}\r\n  }\r\n\r\n  handelCancel = () => {\r\n\t\tthis.setState({ \r\n      isEdit: false,\r\n      value: this.props.value,\r\n    });\r\n\r\n    window.removeEventListener('keydown', this.handleKeyUpEnter);\r\n\t\twindow.removeEventListener('keydown', this.handleKeyUpEscape);\r\n  }\r\n\r\n  render() {\r\n    const { isEdit, value } = this.state;\r\n    const { \r\n      name, \r\n      type, \r\n      maxLength,\r\n    } = this.props;\r\n\r\n    return (\r\n      <td \r\n        className={`${s.tableCell} ${s.name}`}\r\n        onDoubleClick={this.handleDblClick}\r\n      >\r\n        {isEdit ? (\r\n          <input \r\n            name={name}\r\n            type={type}\r\n            maxLength={maxLength}\r\n            value={value} \r\n            onChange={this.handleChange}\r\n            onBlur={this.handleSave}\r\n            onKeyPress={this.handleKeyUp}\r\n            autoFocus={true}\r\n            className={s.editContact}\r\n          />\r\n        ) : (\r\n          <span>\r\n            {value}\r\n          </span>\r\n        )}\r\n      </td>\r\n    )\r\n  }\r\n}\r\n\r\nEditableValue.propTypes = {\r\n  name: PropTypes.string, \r\n  value: PropTypes.string, \r\n  type: PropTypes.string, \r\n  maxLength: PropTypes.string, \r\n}\r\n\r\nexport default EditableValue;\r\n","import React, { PureComponent } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport EditableValue from './EditableValue';\r\n\r\nimport detail from './detail.svg';\r\n\r\nimport s from './contactList.module.scss';\r\n\r\nconst fields = [\r\n  {\r\n    name: 'name',\r\n    type: 'text',\r\n    maxLength: '30',\r\n  },\r\n  {\r\n    name: 'phone',\r\n    type: 'tel',\r\n    maxLength: '20',\r\n  },\r\n  {\r\n    name: 'address',\r\n    type: 'text',\r\n    maxLength: '30',\r\n  },\r\n  {\r\n    name: 'company',\r\n    type: 'text',\r\n    maxLength: '20',\r\n  },\r\n  {\r\n    name: 'email',\r\n    type: 'email',\r\n    maxLength: '500',\r\n  },\r\n]\r\n\r\nclass Contact extends PureComponent {\r\n  handleDelete = () => {\r\n    const { id, delContact } = this.props;\r\n\r\n\t\tdelContact(id);\r\n  }\r\n\r\n  handleSaveEdit = (name, value) => {\r\n    const { id, saveEditFields } = this.props;\r\n\r\n    saveEditFields(id, name, value);\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      index,\r\n    } = this.props;\r\n    \r\n    return(\r\n    <tr>\r\n        <td className={`${s.serialNumber}`}>\r\n          <p>{index+1}</p>\r\n        </td>\r\n\r\n        {\r\n          fields.map(el => (\r\n            <EditableValue\r\n              {...el}\r\n              key={el.name}\r\n              value={this.props[el.name]}\r\n              saveEditFields={this.handleSaveEdit}\r\n            />\r\n          ))\r\n        }\r\n        <td className={`${s.tableCell}`}>\r\n          <button \r\n            type=\"button\"\r\n            onClick={this.handleDelete}\r\n            className={s.del}\r\n          >\r\n            &times;\r\n          </button>\r\n        </td>\r\n\r\n        <td className={`${s.tableCell}`}>\r\n          <NavLink to={`/items/${index+1}`}>  \r\n            <img src={detail} alt=\"detail\" />\r\n          </NavLink>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string, \r\n  phone: PropTypes.string, \r\n  address: PropTypes.string, \r\n  company: PropTypes.string, \r\n  email: PropTypes.string,\r\n}\r\n\r\nexport default Contact;","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './contactList.module.scss';\r\nimport Contact from './Contact';\r\n\r\nconst tableHeads = [\r\n  { title: '', id: '1' },\r\n  { title: 'NAME', id: '2'},\r\n  { title: 'PHONE', id: '3'},\r\n  { title: 'ADDRESS', id: '4'},\r\n  { title: 'COMPANY', id: '5'},\r\n  { title: 'EMAIL', id: '6'},\r\n  { title: '', id: '7'},\r\n  { title: '', id: '8'},\r\n]\r\n\r\nclass ContactList extends PureComponent {\r\n  render() {\r\n    const { \r\n      contacts, \r\n      delContact,\r\n      saveEditFields,\r\n    } = this.props;\r\n  \r\n\r\n    return (\r\n        <table className={s.table}>\r\n          <colgroup>\r\n            <col className={s.colSerNum} />\r\n            <col className={s.colName} />\r\n            <col className={s.colPhone} />\r\n            <col className={s.colAddress} />\r\n            <col className={s.colCompany} />\r\n            <col className={s.colEmail} />\r\n            <col className={s.colDelProp} span='2'/>\r\n          </colgroup>\r\n          <tbody>\r\n            <tr>\r\n              {\r\n                tableHeads.map(el => (\r\n                  <td \r\n                    key={el.id}\r\n                    className={s.tableCellHeader}\r\n                  >\r\n                    { el.title }\r\n                  </td>\r\n                ))\r\n              }\r\n            </tr>\r\n\r\n            {contacts.map(({id, name, phone, address, company, email}, index) => (\r\n              <Contact \r\n                key={id}\r\n                id={id}\r\n                name={name}\r\n                phone={phone}\r\n                address={address}\r\n                company={company}\r\n                email={email}\r\n                index={index}\r\n                delContact={delContact}\r\n                saveEditFields={saveEditFields}\r\n              />))\r\n            }\r\n          </tbody>\r\n        </table>\r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string, \r\n  phone: PropTypes.string, \r\n  address: PropTypes.string, \r\n  company: PropTypes.string, \r\n  email: PropTypes.string,\r\n  delContact: PropTypes.func,\r\n  saveEditFields: PropTypes.func,\r\n}\r\n\r\nexport default ContactList;","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AddContactForm from './AddContactForm';\r\nimport Filter from './Filter';\r\nimport ContactList from './ContactList';\r\n\r\nimport s from './contacts.module.scss';\r\n\r\nclass Contacts extends PureComponent {\r\n  render() {\r\n    const { \r\n      contacts,\r\n      addContact, \r\n      delContact, \r\n      saveEditFields, \r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={s.wrapperContacts}>\r\n        <div className={s.wrap}>\r\n          <h1 className={s.title}>phone book</h1>\r\n\r\n          <div className={s.wrapper}>\r\n            <Filter/>\r\n            \r\n            <ContactList\r\n              contacts={contacts}\r\n              delContact={delContact}\r\n              saveEditFields={saveEditFields}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <AddContactForm\r\n          addContact={addContact}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    phone: PropTypes.string,\r\n    address: PropTypes.string,\r\n    company: PropTypes.string,\r\n    email: PropTypes.string,\r\n  })), \r\n  addContact: PropTypes.func,\r\n  delContact: PropTypes.func,\r\n  saveEditFields: PropTypes.func,\r\n}\r\n\r\nexport default Contacts;","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport qs from 'query-string';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { \r\n  addContact, \r\n  delContact,\r\n  saveEditFields, \r\n} from '../redux/contact/actions.js';\r\n\r\nimport Contacts from './Contacts';\r\n\r\nclass PhoneBook extends PureComponent {\r\n  render() {\r\n    const { \r\n      contacts,\r\n      addContact, \r\n      saveEditFields, \r\n      delContact, \r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Contacts\r\n          contacts={contacts}\r\n          addContact={addContact}\r\n          delContact={delContact}\r\n          saveEditFields={saveEditFields}\r\n        />\r\n      </div>\r\n    )\r\n  };\r\n};\r\n\r\nconst filterContacts = (arr, searchKey) => {\r\n  const { search } = qs.parse(searchKey);\r\n\r\n  if(!search) {\r\n    return arr\r\n  }\r\n    return arr.filter(obj => Object.keys(obj).some(key => obj[key].toLowerCase().includes(search)));\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: filterContacts(state.contacts, state.router.location.search),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({\r\n    addContact,\r\n    delContact,\r\n    saveEditFields,\r\n  }, dispatch);\r\n\r\n  PhoneBook.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      phone: PropTypes.string,\r\n      address: PropTypes.string,\r\n      company: PropTypes.string,\r\n      email: PropTypes.string,\r\n    })),\r\n    addContact: PropTypes.func,\r\n    delContact: PropTypes.func,\r\n    saveEditFields: PropTypes.func,\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBook);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './contactProperties.module.scss';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ContactProperties = ({ contact }) => {\r\n  return (\r\n    <div className={s.contactProperties}>\r\n      <h1 className={s.name}>{contact.name}</h1>\r\n\r\n      <div className={s.contactDetail}>\r\n        <h5 className={s.detailName}>PHONE</h5>\r\n        <p className={s.detail}>{contact.phone}</p>\r\n\r\n        <h5 className={s.detailName}>ADDRESS</h5>\r\n        <p className={s.detail}>{contact.address}</p>\r\n\r\n        <h5 className={s.detailName}>COMPANY</h5>\r\n        <p className={s.detail}>{contact.company}</p>\r\n\r\n        <h5 className={s.detailName}>EMAIL</h5>\r\n        <p className={s.detail}>{contact.email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const itemId = ownProps.match.params.itemId;\r\n  const contact = state.contacts[itemId-1]\r\n\r\n  return {\r\n    contact: contact,\r\n  };\r\n};\r\n\r\nContactProperties.propTypes = {\r\n  name: PropTypes.string, \r\n  phone: PropTypes.string, \r\n  address: PropTypes.string, \r\n  company: PropTypes.string, \r\n  email: PropTypes.string,\r\n}\r\n\r\nexport default connect (mapStateToProps)(ContactProperties);\r\n","import React from 'react';\r\n\r\nimport PhoneBook from './PhoneBook';\r\nimport ContactProperties from './ContactProperties';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Switch>\r\n          <Route exact path='/phoneBook' component={PhoneBook} />\r\n          <Route exact path=\"/items/:itemId\" component={ContactProperties} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { \r\n  ADD_CONTACT, \r\n  DELETE_CONTACT, \r\n  SAVE_EDIT_FIELDS, \r\n} from \"./types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CONTACT:\r\n      return [...state, action.payload];\r\n\r\n    case DELETE_CONTACT:\r\n      return state.filter(c =>(c.id !== action.payload));\r\n\r\n    case SAVE_EDIT_FIELDS:\r\n      return state.map(t => {\r\n\t\t\t\tif (t.id === action.payload.id) {\r\n\t\t\t\t\t[action.payload.nameField] = action.payload.value;\r\n\t\t\t\t}\r\n\t\t\t\treturn t;\r\n      });\r\n\r\n    default: return state;\r\n  }\r\n} ","import { combineReducers } from \"redux\";\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nimport contactReducer from \"./contact/contactReducer.js\";\r\n\r\nconst createRootReducer = (history) => combineReducers({\r\n\trouter: connectRouter(history),\r\n\tcontacts: contactReducer,\r\n})\r\n\r\nexport default createRootReducer;","import { routerMiddleware } from 'connected-react-router';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport createRootReducer from './redux/rootReducer.js';\r\n\r\nconst persistedState = localStorage.getItem('reduxState') \r\n                       ? { contacts: JSON.parse(localStorage.getItem('reduxState')) }\r\n                       : {}\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nexport default function configureStore(persistedState) {\r\n  const store = createStore(\r\n    createRootReducer(history),\r\n    persistedState,\r\n    compose(\r\n      applyMiddleware(\r\n        routerMiddleware(history),\r\n\t\t\t),\r\n\t\t\tdevToolsEnhancer(),\r\n\t\t),\r\n  )\r\n\r\n  return store\r\n}\r\n\r\nexport const store = configureStore(persistedState);\r\n\r\nstore.subscribe(()=>{\r\n\tlocalStorage.setItem('reduxState', JSON.stringify(store.getState().contacts))\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './components/App';\r\nimport {history, store} from './configurestore'\r\n\r\nconst app = (\r\n\t<Provider store={ store }>\r\n\t\t<ConnectedRouter history={history}>\r\n\t\t\t<App />\r\n    </ConnectedRouter>\r\n\t</Provider>\r\n)\r\n\r\nReactDOM.render(app , document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContactFormWrapper\":\"addContactForm_addContactFormWrapper__1bqNr\",\"addContactForm\":\"addContactForm_addContactForm__2j-HP\",\"formWrapper\":\"addContactForm_formWrapper__2yNyA\",\"title\":\"addContactForm_title__52-Zs\",\"entryField\":\"addContactForm_entryField__1GBeh\",\"hasError\":\"addContactForm_hasError__3-AFs\",\"fieldHeader\":\"addContactForm_fieldHeader__2_28f\",\"btnWriteDown\":\"addContactForm_btnWriteDown__1dMN9\",\"formMessage\":\"addContactForm_formMessage__2Uavp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactProperties\":\"contactProperties_contactProperties__3H4Su\",\"name\":\"contactProperties_name__1Rpy1\",\"contactDetail\":\"contactProperties_contactDetail__3UCiM\",\"detailName\":\"contactProperties_detailName__3hCI3\",\"detail\":\"contactProperties_detail__xLh7J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperContacts\":\"contacts_wrapperContacts__m3Fzn\",\"title\":\"contacts_title__1R7cy\",\"wrapper\":\"contacts_wrapper__3z4po\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"filter_filterWrapper__1GyEa\",\"search\":\"filter_search__1QLME\",\"searchField\":\"filter_searchField__1KPxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"contactList_table__ZmKAs\",\"tableCellHeader\":\"contactList_tableCellHeader__rOyC2\",\"tableCell\":\"contactList_tableCell__1F4aX\",\"editContact\":\"contactList_editContact__1etSS\",\"serialNumber\":\"contactList_serialNumber__7J4px\",\"del\":\"contactList_del__1w9U0\",\"colSerNum\":\"contactList_colSerNum__FaE34\",\"colName\":\"contactList_colName__3N6NL\",\"colPhone\":\"contactList_colPhone__6GIT4\",\"colAddress\":\"contactList_colAddress__1Omg8\",\"colCompany\":\"contactList_colCompany__2mvnH\",\"colEmail\":\"contactList_colEmail__1Vwot\",\"colDelProp\":\"contactList_colDelProp__2LZ0S\"};","module.exports = __webpack_public_path__ + \"static/media/search.822bc171.svg\";","module.exports = __webpack_public_path__ + \"static/media/detail.01eb1f84.svg\";"],"sourceRoot":""}